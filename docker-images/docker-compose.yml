version: '3'

services:
  registry:
    image: registry:2
    hostname: myregistry
    restart: always
    volumes:
      - registry_data:/var/lib/registry
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '5.000'
          memory: 256M
    ports:
      - 5000:5000
  
  fluentd:
    image: myregistry:5000/fluentd:0.1
    build: ./fluentd
    hostname: fluentd
    env_file:
      - ./fluentd/.env
      - ./minio/.env
    ports:
      - "24224:24224"
      - "24224:24224/udp"

  kibana:
    image: myregistry:5000/kibana:0.1
    build: ./kibana
    hostname: kibana
    depends_on:
      - influxdb
      - fluentd
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '10.000'
          memory: 512M
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: kibana.access
    ports:
      - "5601:5601"
  
  elasticsearch:
    image: myregistry:5000/elasticsearch:0.1
    build: ./elasticsearch
    hostname: elasticsearch
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '10.000'
          memory: 512M
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: elasticsearch.access
    ports:
      - "9200:9200"
      - "9300:9300"

  telegraf:
    image: myregistry:5000/telegraf:0.1
    build: ./telegraf
    hostname: telegraf
    env_file:
      - ./telegraf/.env
    depends_on:
      - influxdb
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: telegraf.access

  minio:
    image: myregistry:5000/minio:0.1
    build: ./minio
    hostname: minio
    depends_on:
      - fluentd
    env_file:
      - ./minio/.env
    volumes:
      - minio_data:/data
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '5.000'
          memory: 256M
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: minio.access
    ports:
      - "9000:9000"

  wordpress:
    image: myregistry:5000/wordpress:0.1
    build: ./wordpress
    hostname: wordpress
    env_file:
      - ./wordpress/.env
    volumes:
      - wordpress_data:/srv/app/wordpress
  
  influxdb:
    image: myregistry:5000/influxdb:0.1
    build: ./influxdb
    hostname: influxdb
    env_file:
      - ./influxdb/.env
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '20.000'
          memory: 512M
    volumes:
      - influxdb_data:/var/lib/influxdb
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: influxdb.access
    ports:
      - "8125:8125/udp"
      - "8092:8092/udp"
      - "8086:8086"
      - "8083:8083"
  
  kapacitor:
    image: myregistry:5000/kapacitor:0.1
    build: ./kapacitor
    hostname: kapacitor
    depends_on:
      - influxdb
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '10.000'
          memory: 256M
    volumes:
      - kapacitor_data:/var/lib/kapacitor
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: kapacitor.access
    ports:
      - "9092:9092"

  chronograf:
    image: myregistry:5000/chronograf:0.1
    build: ./chronograf
    hostname: chronograf
    env_file:
      - ./chronograf/.env
    depends_on:
      - influxdb
      - kapacitor
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '10.000'
          memory: 256M
    volumes:
      - chronograf_data:/var/lib/chronograf
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: chronograf.access
    ports:
      - "8888:8888"

  mysql:
    image: myregistry:5000/mysql:0.1
    build: ./mysql
    hostname: mysql
    env_file:
      - ./mysql/.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '10.000'
          memory: 512M
    volumes:
      - db_data:/var/lib/mysql
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: mysql.access
    ports:
      - "3306:3306"

  httpd:
    image: myregistry:5000/httpd:0.1
    build: ./httpd
    hostname: httpd
    env_file:
      - ./httpd/.env
    depends_on:
      - mysql
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 1
        window: 120s
      resources:
        limits:
          cpus: '10.000'
          memory: 256M
    volumes:
      - wordpress_data:/var/www/localhost/htdocs
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: httpd.access
    ports:
      - "80:80"

volumes:
  registry_data: {}
  db_data: {}
  elasticsearch_data: {}
  wordpress_data: {}
  influxdb_data: {}
  kapacitor_data: {}
  chronograf_data: {}
  minio_data: {}